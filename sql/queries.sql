CREATE DATABASE IF NOT EXISTS spring_practice;

USE spring_practice;

CREATE TABLE IF NOT EXISTS customers (
    id BIGINT NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(255) NOT NULL,
    PRIMARY KEY(id)
);

CREATE TABLE IF NOT EXISTS user_roles (
    id BIGINT NOT NULL AUTO_INCREMENT,
    role VARCHAR(255) UNIQUE NOT NULL,
    description LONGTEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP NULL DEFAULT NULL,
    PRIMARY KEY(id)
);

INSERT INTO user_roles (role, description) 
VALUES 
    ('user', 'Standard user role with basic permissions'),
    ('admin', 'Administrator role with full permissions');

CREATE TABLE IF NOT EXISTS users (
    id BIGINT NOT NULL AUTO_INCREMENT,
    username VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255) NOT NULL,
    city VARCHAR(255) NOT NULL,
    country VARCHAR(255) NOT NULL,
    state VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL,
    user_id BIGINT,
    PRIMARY KEY(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP NULL DEFAULT NULL,
    CONSTRAINT fk_user_role FOREIGN KEY (user_id) REFERENCES user_roles(id)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS countries (
    id BIGINT NOT NULL AUTO_INCREMENT,
    name LONGTEXT NOT NULL,
    official_name LONGTEXT NOT NULL,
    cca2_code VARCHAR(255) NOT NULL,
    ccn3_code VARCHAR(255) NOT NULL,
    currencies LONGTEXT NOT NULL,
    capital LONGTEXT NOT NULL,
    region LONGTEXT NOT NULL,
    languages LONGTEXT NOT NULL,
    latlng LONGTEXT NOT NULL,
    area_code INT(11) NOT NULL,
    googlemaps LONGTEXT NOT NULL,
    population INT(20) NOT NULL,
    timezone LONGTEXT NOT NULL,
    continent LONGTEXT NOT NULL,
    flag LONGTEXT NOT NULL,
    PRIMARY KEY(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP NULL DEFAULT NULL
);

